include_rules

# This file uses Tuprules.tup and tup.config to control how files are compiled.


# [1] Compile each source file into this directory without linking, organised by platform.
# ===============================================================================================

# [1.1] Compile for Linux 32 bit Target
# ------------------------------------------------------------------------------------------------

ifeq (@(LINUX32_ENABLED),yes)

: foreach $(ROOTDIR)/src/*.c |>                  $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> hg14_l32_%B.o
: foreach $(ROOTDIR)/src/graph/*.c |>            $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> hg14_l32_graph_%B.o
: foreach $(ROOTDIR)/src/rng/*.c |>              $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> hg14_l32_rng_%B.o
: foreach $(ROOTDIR)/src/noise/*.c |>            $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> hg14_l32_noise_%B.o
: foreach $(ROOTDIR)/src/wgen/*.c |>             $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> hg14_l32_wgen_%B.o
: foreach $(ROOTDIR)/src/vendor/stb_image/*.c |> $(LINUX32_CC) -c %f -o %o |> hg14_l32_%B.o

endif


# [1.2] Compile for Linux 64 bit Target
# ------------------------------------------------------------------------------------------------

ifeq (@(LINUX64_ENABLED),yes)

: foreach $(ROOTDIR)/src/*.c |>                  $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> hg14_l64_%B.o
: foreach $(ROOTDIR)/src/graph/*.c |>            $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> hg14_l64_graph_%B.o
: foreach $(ROOTDIR)/src/rng/*.c |>              $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> hg14_l64_rng_%B.o
: foreach $(ROOTDIR)/src/noise/*.c |>            $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> hg14_l64_noise_%B.o
: foreach $(ROOTDIR)/src/wgen/*.c |>             $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> hg14_l64_wgen_%B.o
: foreach $(ROOTDIR)/src/vendor/stb_image/*.c |> $(LINUX64_CC) -c %f -o %o |> hg14_l64_%B.o

: foreach $(ROOTDIR)/src/clock.c      |> $(LINUX64_CC) -c %f -o %o |> hg14test_l64_%B.o
: foreach $(ROOTDIR)/src/exception.c  |> $(LINUX64_CC) -c %f -o %o |> hg14test_l64_%B.o
: foreach $(ROOTDIR)/src/utf8.c       |> $(LINUX64_CC) -c %f -o %o |> hg14test_l64_%B.o
: foreach $(ROOTDIR)/src/test/*.c     |> $(LINUX64_CC) -c %f -o %o |> hg14test_l64_test_%B.o

endif


# [1.3] Compile for Win32 Target
# ------------------------------------------------------------------------------------------------

ifeq (@(WIN32_ENABLED),yes)

: foreach $(ROOTDIR)/src/*.c |>                  $(WIN32_CC) $(WARNINGS) -c %f -o %o |> hg14_w32_%B.o
: foreach $(ROOTDIR)/src/graph/*.c |>            $(WIN32_CC) $(WARNINGS) -c %f -o %o |> hg14_w32_graph_%B.o
: foreach $(ROOTDIR)/src/rng/*.c |>              $(WIN32_CC) $(WARNINGS) -c %f -o %o |> hg14_w32_rng_%B.o
: foreach $(ROOTDIR)/src/noise/*.c |>            $(WIN32_CC) $(WARNINGS) -c %f -o %o |> hg14_w32_noise_%B.o
: foreach $(ROOTDIR)/src/wgen/*.c |>             $(WIN32_CC) $(WARNINGS) -c %f -o %o |> hg14_w32_wgen_%B.o
: foreach $(ROOTDIR)/src/vendor/stb_image/*.c |> $(WIN32_CC) -c %f -o %o |> hg14_w32_%B.o

endif


# [1.4] Compile for Win64 Target
# ------------------------------------------------------------------------------------------------

ifeq (@(WIN64_ENABLED),yes)

: foreach $(ROOTDIR)/src/*.c |>                  $(WIN64_CC) $(WARNINGS) -c %f -o %o |> hg14_w64_%B.o
: foreach $(ROOTDIR)/src/graph/*.c |>            $(WIN64_CC) $(WARNINGS) -c %f -o %o |> hg14_w64_graph_%B.o
: foreach $(ROOTDIR)/src/rng/*.c |>              $(WIN64_CC) $(WARNINGS) -c %f -o %o |> hg14_w64_rng_%B.o
: foreach $(ROOTDIR)/src/noise/*.c |>            $(WIN64_CC) $(WARNINGS) -c %f -o %o |> hg14_w64_noise_%B.o
: foreach $(ROOTDIR)/src/wgen/*.c |>             $(WIN64_CC) $(WARNINGS) -c %f -o %o |> hg14_w64_wgen_%B.o
: foreach $(ROOTDIR)/src/vendor/stb_image/*.c |> $(WIN64_CC) -c %f -o %o |> hg14_w64_%B.o

endif



# [2] Link each object in this directory by platform.
# ===============================================================================================

LIB = -lm

ifeq (@(LINUX32_ENABLED),yes)
: hg14_l32_*.o  |> $(LINUX32_LD) %f $(LIB) -o %o |> hexgen2014-linux32
endif

ifeq (@(LINUX64_ENABLED),yes)
: hg14_l64_*.o  |> $(LINUX64_LD) %f $(LIB) -o %o |> hexgen2014-linux64

: hg14test_l64_*.o  |> $(LINUX64_LD) %f $(LIB) -o %o |> hexgen2014-test-linux64
endif

WINLIB = -lm

ifeq (@(WIN32_ENABLED),yes)
: hg14_w32_*.o  |> $(WIN32_LD) %f $(LIB) -o %o |> hexgen2014-win32.exe
endif

ifeq (@(WIN64_ENABLED),yes)
: hg14_w64_*.o  |> $(WIN64_LD) %f $(LIB) -o %o |> hexgen2014-win64.exe
endif


