include_rules

# This file uses Tuprules.tup and tup.config to control how files are compiled.


# [0] Feature Support
# ===============================================================================================

# None for this project.


# [1] Compile each source file into this directory without linking, organised by platform.
# ===============================================================================================

# [1.1] Compile for Linux 32 bit Target
# ------------------------------------------------------------------------------------------------

ifeq (@(LINUX32_ENABLED),yes)

: foreach $(ROOTDIR)/src/*.c |>                  $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> linux32.o/hg14_%B.o
: foreach $(ROOTDIR)/src/graph/*.c |>            $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> linux32.o/hg14_graph_%B.o
: foreach $(ROOTDIR)/src/rng/*.c |>              $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> linux32.o/hg14_rng_%B.o
: foreach $(ROOTDIR)/src/noise/*.c |>            $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> linux32.o/hg14_noise_%B.o
: foreach $(ROOTDIR)/src/wgen/*.c |>             $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> linux32.o/hg14_wgen_%B.o
: foreach $(ROOTDIR)/src/vendor/stb_image/*.c |> $(LINUX32_CC)             -c %f -o %o |> linux32.o/hg14_vendor_%B.o
: foreach $(ROOTDIR)/src/test/*.c |>             $(LINUX32_CC) $(WARNINGS) -c %f -o %o |> linux32.o/test_%B.o

endif


# [1.2] Compile for Linux 64 bit Target
# ------------------------------------------------------------------------------------------------

ifeq (@(LINUX64_ENABLED),yes)

: foreach $(ROOTDIR)/src/*.c |>                  $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> linux64.o/hg14_%B.o
: foreach $(ROOTDIR)/src/graph/*.c |>            $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> linux64.o/hg14_graph_%B.o
: foreach $(ROOTDIR)/src/rng/*.c |>              $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> linux64.o/hg14_rng_%B.o
: foreach $(ROOTDIR)/src/noise/*.c |>            $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> linux64.o/hg14_noise_%B.o
: foreach $(ROOTDIR)/src/wgen/*.c |>             $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> linux64.o/hg14_wgen_%B.o
: foreach $(ROOTDIR)/src/vendor/stb_image/*.c |> $(LINUX64_CC)             -c %f -o %o |> linux64.o/hg14_vendor_%B.o
: foreach $(ROOTDIR)/src/test/*.c |>             $(LINUX64_CC) $(WARNINGS) -c %f -o %o |> linux64.o/test_%B.o

endif


# [1.3] Compile for Win32 Target
# ------------------------------------------------------------------------------------------------

ifeq (@(WIN32_ENABLED),yes)

: foreach $(ROOTDIR)/src/*.c |>                  $(WIN32_CC) $(WARNINGS) -c %f -o %o |> win32.o/hg14_%B.o
: foreach $(ROOTDIR)/src/graph/*.c |>            $(WIN32_CC) $(WARNINGS) -c %f -o %o |> win32.o/hg14_graph_%B.o
: foreach $(ROOTDIR)/src/rng/*.c |>              $(WIN32_CC) $(WARNINGS) -c %f -o %o |> win32.o/hg14_rng_%B.o
: foreach $(ROOTDIR)/src/noise/*.c |>            $(WIN32_CC) $(WARNINGS) -c %f -o %o |> win32.o/hg14_noise_%B.o
: foreach $(ROOTDIR)/src/wgen/*.c |>             $(WIN32_CC) $(WARNINGS) -c %f -o %o |> win32.o/hg14_wgen_%B.o
: foreach $(ROOTDIR)/src/vendor/stb_image/*.c |> $(WIN32_CC)             -c %f -o %o |> win32.o/hg14_vendor_%B.o
: foreach $(ROOTDIR)/src/test/*.c |>             $(WIN32_CC) $(WARNINGS) -c %f -o %o |> win32.o/test_%B.o

endif


# [1.4] Compile for Win64 Target
# ------------------------------------------------------------------------------------------------

ifeq (@(WIN64_ENABLED),yes)

: foreach $(ROOTDIR)/src/*.c |>                  $(WIN64_CC) $(WARNINGS) -c %f -o %o |> win64.o/hg14_%B.o
: foreach $(ROOTDIR)/src/graph/*.c |>            $(WIN64_CC) $(WARNINGS) -c %f -o %o |> win64.o/hg14_graph_%B.o
: foreach $(ROOTDIR)/src/rng/*.c |>              $(WIN64_CC) $(WARNINGS) -c %f -o %o |> win64.o/hg14_rng_%B.o
: foreach $(ROOTDIR)/src/noise/*.c |>            $(WIN64_CC) $(WARNINGS) -c %f -o %o |> win64.o/hg14_noise_%B.o
: foreach $(ROOTDIR)/src/wgen/*.c |>             $(WIN64_CC) $(WARNINGS) -c %f -o %o |> win64.o/hg14_wgen_%B.o
: foreach $(ROOTDIR)/src/vendor/stb_image/*.c |> $(WIN64_CC)             -c %f -o %o |> win64.o/hg14_vendor_%B.o
: foreach $(ROOTDIR)/src/test/*.c |>             $(WIN64_CC) $(WARNINGS) -c %f -o %o |> win64.o/test_%B.o

endif



# [2] Link each object in this directory by platform.
# ===============================================================================================

LIB = -lm


ifeq (@(LINUX32_ENABLED),yes)
: linux32.o/hg14_*.o |> $(LINUX32_LD) %f $(LIB) -o %o |> hexgen2014-linux32

TEST_OBJECTS =
TEST_OBJECTS += linux32.o/test_*.o
TEST_OBJECTS += linux32.o/hg14_base.o
TEST_OBJECTS += linux32.o/hg14_clock.o
TEST_OBJECTS += linux32.o/hg14_utf8.o

: $(TEST_OBJECTS) |> $(LINUX32_LD) %f $(LIB) -o %o |> test-linux32
endif


ifeq (@(LINUX64_ENABLED),yes)
: linux64.o/hg14_*.o |> $(LINUX64_LD) %f $(LIB) -o %o |> hexgen2014-linux64

TEST_OBJECTS =
TEST_OBJECTS += linux64.o/test_*.o
TEST_OBJECTS += linux64.o/hg14_base.o
TEST_OBJECTS += linux64.o/hg14_clock.o
TEST_OBJECTS += linux64.o/hg14_utf8.o

: $(TEST_OBJECTS) |> $(LINUX64_LD) %f $(LIB) -o %o |> test-linux64
endif


LIB = -lm


ifeq (@(WIN32_ENABLED),yes)
: win32.o/hg14_*.o  |> $(WIN32_LD) %f $(LIB) -o %o |> hexgen2014-win32.exe

TEST_OBJECTS =
TEST_OBJECTS += win32.o/test_*.o
TEST_OBJECTS += win32.o/hg14_base.o
TEST_OBJECTS += win32.o/hg14_clock.o
TEST_OBJECTS += win32.o/hg14_utf8.o

: $(TEST_OBJECTS) |> $(WIN32_LD) %f $(LIB) -o %o |> test-win32.exe
endif


ifeq (@(WIN64_ENABLED),yes)
: hg14_w64_*.o  |> $(WIN64_LD) %f $(LIB) -o %o |> hexgen2014-win64.exe

TEST_OBJECTS =
TEST_OBJECTS += win64.o/test_*.o
TEST_OBJECTS += win64.o/hg14_base.o
TEST_OBJECTS += win64.o/hg14_clock.o
TEST_OBJECTS += win64.o/hg14_utf8.o

: $(TEST_OBJECTS) |> $(WIN64_LD) %f $(LIB) -o %o |> test-win64.exe
endif


